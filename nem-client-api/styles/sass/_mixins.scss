@import 'compass';
@import 'config';

%clearfix {
	*zoom: 1;

    &:before, &:after {
	    content: " ";
	    display: table;
    }

    &:after {
    	clear: both;
    }
}

@mixin ellipsis-overflow($width: none) {
	@include inline-block();
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	@if $width != none {
		width: $width;
	}
}

@mixin noti-box($notiBox-size) {
	@include inline-block();
	width: $notiBox-size;
	height: $notiBox-size;
	line-height: $notiBox-size;
	text-align: center;
	font-weight: $fontWeight-black;
}

@mixin custom-dropdown($height, $bgColor, $arrowColor) {
	.custom-arrow {
		height: $height;
		line-height: $height;
		background-color: $bgColor;
		color: $arrowColor;
	}
}

@mixin manyTransitions($list, $time, $easing: '') {
    $transitions: ();

    @each $transition in $list {
        $trans: unquote("#{$transition} #{$time} #{$easing}");
        $transitions: append($transitions, $trans, comma);
    }

	@include transition( #{$transitions} );
}

// $arrow: ($color, $width, $height)
// $border: ($enable, $width, $color)
// $position: ($pos, $reverse)
@mixin arrow-box($direction, $arrow, $border: ('enable': false), $position: ('pos': 50%, 'reverse': false)) { 
    $side1: '';
    $wh1: '';
	$wh2: '';
    $side2: '';

    @if $direction == up or $direction == down { 
    	$wh1: map-get($arrow, 'width');
    	$wh2: map-get($arrow, 'height');
	    @if map-get($position, 'reverse') == false {
    		$side2: left;
    	} @else {
    		$side2: right;
    	}

	    @if $direction == up { 
	    	$side1: bottom;
	    }
	    @if $direction == down { 
	    	$side1: top;
	    }
	}

	@if $direction == left or $direction == right {
		$wh1: map-get($arrow, 'height');
    	$wh2: map-get($arrow, 'width');
	    @if map-get($position, 'reverse') == false {
    		$side2: top;
    	} @else {
    		$side2: bottom;
    	}

	    @if $direction == left { 
	    	$side1: right;
	    }
	    @if $direction == right { 
	    	$side1: left;
	    }
	}

	$selector: '&:after';
	@if map-get($border, 'enable') == true {
		$selector: '&:after, &:before';
	}

    #{$selector} {
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;

    	#{$side1}: 100%;
        #{$side2}: map-get($position, 'pos');
    }

    &:after {
    	border-width: $wh1 / 2;
        border-#{$side1}: $wh2 solid map-get($arrow, 'color');
        margin-#{$side2}: -$wh1 / 2;
    }

    @if map-get($border, 'enable') == true {
    	&:before {
    		border-width: $wh1 / 2 + map-get($border, 'width');
	        border-#{$side1}: ($wh2 + map-get($border, 'width')) solid map-get($border, 'color');
	        margin-#{$side2}: -$wh1 / 2 - map-get($border, 'width');
    	}
    }
}

@mixin animation($animation) {
	-webkit-animation: $animation;
    -moz-animation: $animation;
    -o-animation: $animation;
    -ms-animation: $animation;
    animation: $animation;
}

@mixin animation-delay($delay) {
	-webkit-animation-delay: $delay;
    -moz-animation-delay: $delay;
    -o-animation-delay: $delay;
    -ms-animation-delay: $delay;
    animation-delay: $delay;
}

@mixin input-placeholder() {
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; } 
}

@mixin break-word() {
    word-break: break-all;
    word-break: break-word;
}

@mixin fill-restOfHeight-container() {
    &:before {
        content:'';
        float: left;
        height: 100%;
    }
}

@mixin fill-restOfHeight() {
    &:after {
        content:'';
        display: block;
        clear: both;
    }
}